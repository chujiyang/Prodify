<?xml version="1.0" encoding="utf-8" ?>
<pages:BasePage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:pages="clr-namespace:Calendar.Pages"
             xmlns:views="clr-namespace:Calendar.Views"
             xmlns:converters="clr-namespace:Calendar.Converters"
             xmlns:viewmodel="clr-namespace:Calendar.ViewModels"
             xmlns:data="clr-namespace:Calendar.Data"
             xmlns:picker="clr-namespace:Syncfusion.Maui.Picker;assembly=Syncfusion.Maui.Picker"
             xmlns:buttons="clr-namespace:Syncfusion.Maui.Buttons;assembly=Syncfusion.Maui.Buttons"
             x:Class="Calendar.Pages.EventDetailPage"
             x:TypeArguments="viewmodel:EventDetailViewModel"
             x:DataType="viewmodel:EventDetailViewModel"
             Shell.NavBarIsVisible="false">

    <pages:BasePage.Resources>
        <buttons:SfRadioGroupKey x:Key="alertOptions"/>
        <ResourceDictionary>
            <toolkit:BoolToObjectConverter x:Key="RepeatTextConverter" TrueObject="Daily ->" FalseObject="Never ->" />
        </ResourceDictionary>
    </pages:BasePage.Resources>
    <Grid RowDefinitions="Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto"
        ColumnDefinitions="64, 180, *"
        HorizontalOptions="FillAndExpand"
        RowSpacing="12"
        ColumnSpacing="5">

        <Grid Grid.Row="0"
             ColumnDefinitions="33.33*, 33.33*, 33.33*"
             ColumnSpacing="8" 
             HorizontalOptions="FillAndExpand" Grid.ColumnSpan="3">
            <Button Text="Cancel" Grid.Column="0"
                Command="{Binding CancelCommand}" HorizontalOptions="Center" VerticalOptions="Center" MinimumWidthRequest="80" />
            <Label Grid.Column="1"
                Text="{Binding DialogTitle}"
                VerticalOptions="Center" 
                HorizontalOptions="Center" Margin="12, 0, 12, 0"/>
            <Button Text="Save" Grid.Column="2"
                    Command="{Binding SubmitCommand}" HorizontalOptions="Center" VerticalOptions="Center" MinimumWidthRequest="80" />
        </Grid>
        
        <Label Grid.Row="1" Grid.Column="0"
            Text="Title"
            VerticalOptions="Center" 
            HorizontalOptions="End" />
        
        <Entry  Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"  x:Name="TaskName"
            Placeholder="Enter task title" Text="{Binding OperatingEvent.EventName, Mode=TwoWay}"/>
        
        <Label Grid.Row="2" Grid.Column="0"
            Text="Date"
            HorizontalOptions="End"
            VerticalOptions="Center"/>

        <Grid Grid.Row="2" Grid.Column="1">
            <picker:SfDatePicker x:Name="DatePicker"
                            Mode="RelativeDialog"
                            MinimumDate="{Binding MinDisplayDateTime}"
                            MaximumDate="{Binding MaxDisplayDateTime}"
                            RelativePosition="AlignBottom"
                            Format="MM_dd_yyyy"
                            Background="{AppThemeBinding Light={StaticResource LightPickerBackground}, Dark={StaticResource DarkPickerBackground}}"
                            SelectedDate="{Binding OperatingEvent.Date, Mode=TwoWay}"
                            IsOpen="{Binding IsDateOpen, Mode=TwoWay}">
                    <picker:SfDatePicker.TextStyle>
                        <picker:PickerTextStyle FontSize="14" TextColor="{AppThemeBinding Light={StaticResource LightPickerText}, Dark={StaticResource DarkPickerText}}"/>
                    </picker:SfDatePicker.TextStyle>
                    <picker:SfDatePicker.SelectedTextStyle >
                        <picker:PickerTextStyle FontSize="15" TextColor="{AppThemeBinding Light={StaticResource LightPickerSelectionText}, Dark={StaticResource DarkPickerSelectionText}}"/>
                    </picker:SfDatePicker.SelectedTextStyle>
                    <picker:SfDatePicker.SelectionView>
                        <picker:PickerSelectionView CornerRadius="10" Padding="10, 5, 10, 5"                                                 
                            Stroke="{AppThemeBinding Light={StaticResource LightPickerSelectionStroke}, Dark={StaticResource DarkPickerSelectionStroke}}"
                            Background="{AppThemeBinding Light={StaticResource LightPickerSelectionBackground}, Dark={StaticResource DarkPickerSelectionBackground}}">
                        </picker:PickerSelectionView>
                    </picker:SfDatePicker.SelectionView>
                    <picker:SfDatePicker.ColumnHeaderView >
                        <picker:DatePickerColumnHeaderView Background="{AppThemeBinding Light={StaticResource LightPickerBackground}, Dark={StaticResource DarkPickerBackground}}">
                           <picker:DatePickerColumnHeaderView.TextStyle >
                                <picker:PickerTextStyle FontSize="15" TextColor="{AppThemeBinding Light={StaticResource LightPickerText}, Dark={StaticResource DarkPickerText}}" />
                            </picker:DatePickerColumnHeaderView.TextStyle>
                        </picker:DatePickerColumnHeaderView>
                    </picker:SfDatePicker.ColumnHeaderView>
                </picker:SfDatePicker>
            
            <Button  
                VerticalOptions="Center" 
                Text="{Binding OperatingEvent.Date, StringFormat='{0:MM-dd-yyyy, ddd}'}"
                Command="{Binding EditDateCommand}" />
        </Grid>

        <Label Grid.Row="3" Grid.Column="0"
            Text="From"
            HorizontalOptions="End"
            VerticalOptions="Center"/>

        <Grid Grid.Row="3" Grid.Column="1">
                <picker:SfTimePicker x:Name="FromPicker"
                             Mode="RelativeDialog"
                             MinuteInterval="15"
                             RelativePosition="AlignBottom"
                             Format="hh_mm_tt"
                             SelectedTime="{Binding OperatingEvent.From, Mode=TwoWay}"
                             Background="{AppThemeBinding Light={StaticResource LightPickerBackground}, Dark={StaticResource DarkPickerBackground}}"
                             IsOpen="{Binding IsFromOpen, Mode=TwoWay}" >

                    <picker:SfTimePicker.TextStyle>
                        <picker:PickerTextStyle FontSize="14" TextColor="{AppThemeBinding Light={StaticResource LightPickerText}, Dark={StaticResource DarkPickerText}}"/>
                    </picker:SfTimePicker.TextStyle>
                    <picker:SfTimePicker.SelectedTextStyle >
                        <picker:PickerTextStyle FontSize="15" TextColor="{AppThemeBinding Light={StaticResource LightPickerSelectionText}, Dark={StaticResource DarkPickerSelectionText}}"/>
                    </picker:SfTimePicker.SelectedTextStyle>
                    <picker:SfTimePicker.SelectionView>
                        <picker:PickerSelectionView CornerRadius="10" Padding="10, 5, 10, 5"                                                 
                            Stroke="{AppThemeBinding Light={StaticResource LightPickerSelectionStroke}, Dark={StaticResource DarkPickerSelectionStroke}}"
                            Background="{AppThemeBinding Light={StaticResource LightPickerSelectionBackground}, Dark={StaticResource DarkPickerSelectionBackground}}">
                        </picker:PickerSelectionView>
                    </picker:SfTimePicker.SelectionView>
                    <picker:SfTimePicker.ColumnHeaderView >
                        <picker:TimePickerColumnHeaderView Background="{AppThemeBinding Light={StaticResource LightPickerBackground}, Dark={StaticResource DarkPickerBackground}}">
                            <picker:TimePickerColumnHeaderView.TextStyle >
                                <picker:PickerTextStyle FontSize="15" TextColor="{AppThemeBinding Light={StaticResource LightPickerText}, Dark={StaticResource DarkPickerText}}" />
                            </picker:TimePickerColumnHeaderView.TextStyle>
                        </picker:TimePickerColumnHeaderView>
                    </picker:SfTimePicker.ColumnHeaderView>

                </picker:SfTimePicker>
            <Button
                 VerticalOptions="Center"
                 Text="{Binding OperatingEvent.From, Converter={converters:TimespanToStringConverter}}"
                 Command="{Binding EditFromCommand}"/>
        </Grid>
        
        <Label  Grid.Row="4" Grid.Column="0"
                Text="To"
                HorizontalOptions="End"
                VerticalOptions="Center" />

        
        <Grid Grid.Row="4" Grid.Column="1">
            <picker:SfTimePicker x:Name="ToPicker"
                             Mode="RelativeDialog"
                             MinuteInterval="15"
                             RelativePosition="AlignBottom"
                             Format="hh_mm_tt"
                             SelectedTime="{Binding OperatingEvent.To, Mode=TwoWay}"
                             Background="{AppThemeBinding Light={StaticResource LightPickerBackground}, Dark={StaticResource DarkPickerBackground}}"
                             IsOpen="{Binding IsToOpen, Mode=TwoWay}">

                    <picker:SfTimePicker.TextStyle>
                        <picker:PickerTextStyle FontSize="14" TextColor="{AppThemeBinding Light={StaticResource LightPickerText}, Dark={StaticResource DarkPickerText}}"/>
                    </picker:SfTimePicker.TextStyle>
                    <picker:SfTimePicker.SelectedTextStyle >
                        <picker:PickerTextStyle FontSize="15" TextColor="{AppThemeBinding Light={StaticResource LightPickerSelectionText}, Dark={StaticResource DarkPickerSelectionText}}"/>
                    </picker:SfTimePicker.SelectedTextStyle>
                    <picker:SfTimePicker.SelectionView>
                        <picker:PickerSelectionView CornerRadius="10" Padding="10, 5, 10, 5"                                                 
                            Stroke="{AppThemeBinding Light={StaticResource LightPickerSelectionStroke}, Dark={StaticResource DarkPickerSelectionStroke}}"
                            Background="{AppThemeBinding Light={StaticResource LightPickerSelectionBackground}, Dark={StaticResource DarkPickerSelectionBackground}}">
                        </picker:PickerSelectionView>
                    </picker:SfTimePicker.SelectionView>
                    <picker:SfTimePicker.ColumnHeaderView >
                        <picker:TimePickerColumnHeaderView Background="{AppThemeBinding Light={StaticResource LightPickerBackground}, Dark={StaticResource DarkPickerBackground}}">
                            <picker:TimePickerColumnHeaderView.TextStyle >
                                <picker:PickerTextStyle FontSize="15" TextColor="{AppThemeBinding Light={StaticResource LightPickerText}, Dark={StaticResource DarkPickerText}}" />
                            </picker:TimePickerColumnHeaderView.TextStyle>
                        </picker:TimePickerColumnHeaderView>
                    </picker:SfTimePicker.ColumnHeaderView>

                </picker:SfTimePicker>

            <Button
                VerticalOptions="Center"
                Text="{Binding OperatingEvent.To, Converter={converters:TimespanToStringConverter}}"
                Command="{Binding EditToCommand}"/>
        </Grid>
            
        <Label Grid.Row="5" Grid.Column="0"
            Text="Notes"
            VerticalOptions="Start" 
            HorizontalOptions="End" />
        <ScrollView Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" VerticalOptions="FillAndExpand">
                <Editor x:Name="Note" Text="{Binding OperatingEvent.Notes, Mode=TwoWay}"
                        Placeholder="Enter notes here. (No more than 100 characters)" 
                        MaxLength="100"
                        MinimumHeightRequest="120" MaximumHeightRequest="200" HorizontalOptions="FillAndExpand" AutoSize="TextChanges" />
        </ScrollView>

        <Label Grid.Row="6" Grid.Column="0"
               Text="Alert"
               VerticalOptions="Center"
               HorizontalOptions="End" />
        <HorizontalStackLayout Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" VerticalOptions="Center" HorizontalOptions="StartAndExpand">
            <RadioButton GroupName="alertOptions" Content="NoAllert"
                                   IsChecked="{Binding OperatingEvent.AlertType, Converter={StaticResource AlertConverter}, ConverterParameter={x:Static data:AlertType.NoAlert}, Mode=OneWay}">
                <RadioButton.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding UpdateAlertCommand}" CommandParameter="NoAlert" />
                </RadioButton.GestureRecognizers>
            </RadioButton>
            <RadioButton GroupName="alertOptions" Content="Notification"
                                   IsChecked="{Binding OperatingEvent.AlertType, Converter={StaticResource AlertConverter}, ConverterParameter={x:Static data:AlertType.Notification}, Mode=OneWay}">
                <RadioButton.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding UpdateAlertCommand}" CommandParameter="Notification" />
                </RadioButton.GestureRecognizers>
            </RadioButton>
            <RadioButton GroupName="alertOptions" Content="Alarm"
                                   IsChecked="{Binding OperatingEvent.AlertType, Converter={StaticResource AlertConverter}, ConverterParameter={x:Static data:AlertType.Alarm}, Mode=OneWay}">
                <RadioButton.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding UpdateAlertCommand}" CommandParameter="Alarm" />
                </RadioButton.GestureRecognizers>
            </RadioButton>
        </HorizontalStackLayout>
        
        <Label Grid.Row="7" Grid.Column="0" IsVisible="{Binding IsEditingSeries}" Text="Repeat" VerticalOptions="Center" HorizontalOptions="End"/>
        <Button Grid.Row="7" Grid.Column="1" IsVisible="{Binding IsEditingSeries}" Text="{Binding OperatingEvent.IsRecurring, Converter={StaticResource RepeatTextConverter}}"
                VerticalOptions="Center" HorizontalOptions="Start" Command="{Binding UpdateRepeatCommand}"/>
    </Grid>

</pages:BasePage>